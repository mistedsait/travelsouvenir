Index: app/src/main/res/xml/file_paths.xml
===================================================================
diff --git a/app/src/main/res/xml/file_paths.xml b/app/src/main/res/xml/file_paths.xml
deleted file mode 100644
--- a/app/src/main/res/xml/file_paths.xml	
+++ /dev/null	
@@ -1,3 +0,0 @@
-<paths xmlns:android="http://schemas.android.com/apk/res/android">
-    <files-path name="images" path="." />
-</paths>
Index: app/src/main/res/xml/backup_rules.xml
===================================================================
diff --git a/app/src/main/res/xml/backup_rules.xml b/app/src/main/res/xml/backup_rules.xml
deleted file mode 100644
--- a/app/src/main/res/xml/backup_rules.xml	
+++ /dev/null	
@@ -1,13 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-   Sample backup rules file; uncomment and customize as necessary.
-   See https://developer.android.com/guide/topics/data/autobackup
-   for details.
-   Note: This file is ignored for devices older that API 31
-   See https://developer.android.com/about/versions/12/backup-restore
--->
-<full-backup-content>
-    <!--
-   <include domain="sharedpref" path="."/>
-   <exclude domain="sharedpref" path="device.xml"/>
--->
-</full-backup-content>
\ No newline at end of file
Index: app/src/main/res/xml/data_extraction_rules.xml
===================================================================
diff --git a/app/src/main/res/xml/data_extraction_rules.xml b/app/src/main/res/xml/data_extraction_rules.xml
deleted file mode 100644
--- a/app/src/main/res/xml/data_extraction_rules.xml	
+++ /dev/null	
@@ -1,19 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?><!--
-   Sample data extraction rules file; uncomment and customize as necessary.
-   See https://developer.android.com/about/versions/12/backup-restore#xml-changes
-   for details.
--->
-<data-extraction-rules>
-    <cloud-backup>
-        <!-- TODO: Use <include> and <exclude> to control what is backed up.
-        <include .../>
-        <exclude .../>
-        -->
-    </cloud-backup>
-    <!--
-    <device-transfer>
-        <include .../>
-        <exclude .../>
-    </device-transfer>
-    -->
-</data-extraction-rules>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
deleted file mode 100644
--- a/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
-    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
===================================================================
diff --git a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml b/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
deleted file mode 100644
--- a/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml	
+++ /dev/null	
@@ -1,6 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
-    <background android:drawable="@drawable/ic_launcher_background" />
-    <foreground android:drawable="@drawable/ic_launcher_foreground" />
-    <monochrome android:drawable="@drawable/ic_launcher_foreground" />
-</adaptive-icon>
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
deleted file mode 100644
--- a/app/src/main/res/values/colors.xml	
+++ /dev/null	
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-    <color name="purple_200">#FFBB86FC</color>
-    <color name="purple_500">#FF6200EE</color>
-    <color name="purple_700">#FF3700B3</color>
-    <color name="teal_200">#FF03DAC5</color>
-    <color name="teal_700">#FF018786</color>
-    <color name="black">#FF000000</color>
-    <color name="white">#FFFFFFFF</color>
-</resources>
\ No newline at end of file
Index: app/src/main/res/values/themes.xml
===================================================================
diff --git a/app/src/main/res/values/themes.xml b/app/src/main/res/values/themes.xml
deleted file mode 100644
--- a/app/src/main/res/values/themes.xml	
+++ /dev/null	
@@ -1,5 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<resources>
-
-    <style name="Theme.TravelSouvenir" parent="android:Theme.Material.Light.NoActionBar" />
-</resources>
\ No newline at end of file
Index: app/src/main/res/values/strings.xml
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
deleted file mode 100644
--- a/app/src/main/res/values/strings.xml	
+++ /dev/null	
@@ -1,5 +0,0 @@
-<resources>
-    <string name="app_name">TravelSouvenir</string>
-    <string name="paris_txt">"City of Light,\" is famed for its iconic landmarks like the Eiffel Tower and rich cultural heritage. It's a global hub for art, fashion, and history.",</string>
-
-</resources>
\ No newline at end of file
Index: app/src/main/res/drawable/ic_launcher_background.xml
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_background.xml b/app/src/main/res/drawable/ic_launcher_background.xml
deleted file mode 100644
--- a/app/src/main/res/drawable/ic_launcher_background.xml	
+++ /dev/null	
@@ -1,170 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    android:width="108dp"
-    android:height="108dp"
-    android:viewportWidth="108"
-    android:viewportHeight="108">
-    <path
-        android:fillColor="#3DDC84"
-        android:pathData="M0,0h108v108h-108z" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M9,0L9,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,0L19,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M29,0L29,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M39,0L39,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M49,0L49,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M59,0L59,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M69,0L69,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M79,0L79,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M89,0L89,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M99,0L99,108"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,9L108,9"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,19L108,19"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,29L108,29"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,39L108,39"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,49L108,49"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,59L108,59"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,69L108,69"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,79L108,79"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,89L108,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M0,99L108,99"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,29L89,29"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,39L89,39"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,49L89,49"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,59L89,59"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,69L89,69"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M19,79L89,79"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M29,19L29,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M39,19L39,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M49,19L49,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M59,19L59,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M69,19L69,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-    <path
-        android:fillColor="#00000000"
-        android:pathData="M79,19L79,89"
-        android:strokeWidth="0.8"
-        android:strokeColor="#33FFFFFF" />
-</vector>
Index: app/src/main/res/drawable/ic_launcher_foreground.xml
===================================================================
diff --git a/app/src/main/res/drawable/ic_launcher_foreground.xml b/app/src/main/res/drawable/ic_launcher_foreground.xml
deleted file mode 100644
--- a/app/src/main/res/drawable/ic_launcher_foreground.xml	
+++ /dev/null	
@@ -1,30 +0,0 @@
-<vector xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:aapt="http://schemas.android.com/aapt"
-    android:width="108dp"
-    android:height="108dp"
-    android:viewportWidth="108"
-    android:viewportHeight="108">
-    <path android:pathData="M31,63.928c0,0 6.4,-11 12.1,-13.1c7.2,-2.6 26,-1.4 26,-1.4l38.1,38.1L107,108.928l-32,-1L31,63.928z">
-        <aapt:attr name="android:fillColor">
-            <gradient
-                android:endX="85.84757"
-                android:endY="92.4963"
-                android:startX="42.9492"
-                android:startY="49.59793"
-                android:type="linear">
-                <item
-                    android:color="#44000000"
-                    android:offset="0.0" />
-                <item
-                    android:color="#00000000"
-                    android:offset="1.0" />
-            </gradient>
-        </aapt:attr>
-    </path>
-    <path
-        android:fillColor="#FFFFFF"
-        android:fillType="nonZero"
-        android:pathData="M65.3,45.828l3.8,-6.6c0.2,-0.4 0.1,-0.9 -0.3,-1.1c-0.4,-0.2 -0.9,-0.1 -1.1,0.3l-3.9,6.7c-6.3,-2.8 -13.4,-2.8 -19.7,0l-3.9,-6.7c-0.2,-0.4 -0.7,-0.5 -1.1,-0.3C38.8,38.328 38.7,38.828 38.9,39.228l3.8,6.6C36.2,49.428 31.7,56.028 31,63.928h46C76.3,56.028 71.8,49.428 65.3,45.828zM43.4,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2c-0.3,-0.7 -0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C45.3,56.528 44.5,57.328 43.4,57.328L43.4,57.328zM64.6,57.328c-0.8,0 -1.5,-0.5 -1.8,-1.2s-0.1,-1.5 0.4,-2.1c0.5,-0.5 1.4,-0.7 2.1,-0.4c0.7,0.3 1.2,1 1.2,1.8C66.5,56.528 65.6,57.328 64.6,57.328L64.6,57.328z"
-        android:strokeWidth="1"
-        android:strokeColor="#00000000" />
-</vector>
\ No newline at end of file
Index: app/src/main/assets/places.json
===================================================================
diff --git a/app/src/main/assets/places.json b/app/src/main/assets/places.json
deleted file mode 100644
--- a/app/src/main/assets/places.json	
+++ /dev/null	
@@ -1,25 +0,0 @@
-{
-  "places": [
-    {
-      "id": 1,
-      "name": "Paris",
-      "date": "7.10.2024",
-      "description": "City of Light, is famed for its iconic landmarks like the Eiffel Tower and rich cultural heritage. It's a global hub for art, fashion, and history.",
-      "image": "paris"
-    },
-    {
-      "id": 2,
-      "name": "London",
-      "date": "15.10.2024",
-      "description": "London is a diverse and vibrant city known for its history, landmarks like Big Ben, and rich cultural life.",
-      "image": "london"
-    },
-    {
-      "id": 3,
-      "name": "New York",
-      "date": "20.10.2024",
-      "description": "New York, the city that never sleeps, is known for its skyscrapers, culture, and entertainment.",
-      "image": "new_york"
-    }
-  ]
-}
Index: app/src/main/java/com/example/travelsouvenir/ui/theme/Type.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/ui/theme/Type.kt b/app/src/main/java/com/example/travelsouvenir/ui/theme/Type.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/ui/theme/Type.kt	
+++ /dev/null	
@@ -1,34 +0,0 @@
-package com.example.travelsouvenir.ui.theme
-
-import androidx.compose.material3.Typography
-import androidx.compose.ui.text.TextStyle
-import androidx.compose.ui.text.font.FontFamily
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.unit.sp
-
-// Set of Material typography styles to start with
-val Typography = Typography(
-    bodyLarge = TextStyle(
-        fontFamily = FontFamily.Default,
-        fontWeight = FontWeight.Normal,
-        fontSize = 16.sp,
-        lineHeight = 24.sp,
-        letterSpacing = 0.5.sp
-    )
-    /* Other default text styles to override
-    titleLarge = TextStyle(
-        fontFamily = FontFamily.Default,
-        fontWeight = FontWeight.Normal,
-        fontSize = 22.sp,
-        lineHeight = 28.sp,
-        letterSpacing = 0.sp
-    ),
-    labelSmall = TextStyle(
-        fontFamily = FontFamily.Default,
-        fontWeight = FontWeight.Medium,
-        fontSize = 11.sp,
-        lineHeight = 16.sp,
-        letterSpacing = 0.5.sp
-    )
-    */
-)
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/ui/theme/Color.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/ui/theme/Color.kt b/app/src/main/java/com/example/travelsouvenir/ui/theme/Color.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/ui/theme/Color.kt	
+++ /dev/null	
@@ -1,11 +0,0 @@
-package com.example.travelsouvenir.ui.theme
-
-import androidx.compose.ui.graphics.Color
-
-val Purple80 = Color(0xFFD0BCFF)
-val PurpleGrey80 = Color(0xFFCCC2DC)
-val Pink80 = Color(0xFFEFB8C8)
-
-val Purple40 = Color(0xFF6650a4)
-val PurpleGrey40 = Color(0xFF625b71)
-val Pink40 = Color(0xFF7D5260)
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/ui/theme/Theme.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/ui/theme/Theme.kt b/app/src/main/java/com/example/travelsouvenir/ui/theme/Theme.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/ui/theme/Theme.kt	
+++ /dev/null	
@@ -1,58 +0,0 @@
-package com.example.travelsouvenir.ui.theme
-
-import android.app.Activity
-import android.os.Build
-import androidx.compose.foundation.isSystemInDarkTheme
-import androidx.compose.material3.MaterialTheme
-import androidx.compose.material3.darkColorScheme
-import androidx.compose.material3.dynamicDarkColorScheme
-import androidx.compose.material3.dynamicLightColorScheme
-import androidx.compose.material3.lightColorScheme
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.platform.LocalContext
-
-private val DarkColorScheme = darkColorScheme(
-    primary = Purple80,
-    secondary = PurpleGrey80,
-    tertiary = Pink80
-)
-
-private val LightColorScheme = lightColorScheme(
-    primary = Purple40,
-    secondary = PurpleGrey40,
-    tertiary = Pink40
-
-    /* Other default colors to override
-    background = Color(0xFFFFFBFE),
-    surface = Color(0xFFFFFBFE),
-    onPrimary = Color.White,
-    onSecondary = Color.White,
-    onTertiary = Color.White,
-    onBackground = Color(0xFF1C1B1F),
-    onSurface = Color(0xFF1C1B1F),
-    */
-)
-
-@Composable
-fun TravelSouvenirTheme(
-    darkTheme: Boolean = isSystemInDarkTheme(),
-    // Dynamic color is available on Android 12+
-    dynamicColor: Boolean = true,
-    content: @Composable () -> Unit
-) {
-    val colorScheme = when {
-        dynamicColor && Build.VERSION.SDK_INT >= Build.VERSION_CODES.S -> {
-            val context = LocalContext.current
-            if (darkTheme) dynamicDarkColorScheme(context) else dynamicLightColorScheme(context)
-        }
-
-        darkTheme -> DarkColorScheme
-        else -> LightColorScheme
-    }
-
-    MaterialTheme(
-        colorScheme = colorScheme,
-        typography = Typography,
-        content = content
-    )
-}
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/data/api/WikipediaMapper.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaMapper.kt b/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaMapper.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaMapper.kt	
+++ /dev/null	
@@ -1,14 +0,0 @@
-package com.example.travelsouvenir.data.api
-
-import com.example.travelsouvenir.data.PlaceEntity
-
-object WikipediaMapper {
-    fun mapToPlaceEntity(response: WikipediaPlaceResponse): PlaceEntity {
-        return PlaceEntity(
-            name = response.title,
-            description = response.description,
-            originalImage = response.originalImage?.source,
-            detailedDescription = response.detailedDescription
-        )
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/data/api/RetrofitInstance.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/api/RetrofitInstance.kt b/app/src/main/java/com/example/travelsouvenir/data/api/RetrofitInstance.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/api/RetrofitInstance.kt	
+++ /dev/null	
@@ -1,16 +0,0 @@
-package com.example.travelsouvenir.data.api
-
-import retrofit2.Retrofit
-import retrofit2.converter.gson.GsonConverterFactory
-
-object RetrofitInstance {
-    private const val BASE_URL = "https://en.wikipedia.org/api/rest_v1/"
-
-    val api: WikipediaApiService by lazy {
-        Retrofit.Builder()
-            .baseUrl(BASE_URL)
-            .addConverterFactory(GsonConverterFactory.create())
-            .build()
-            .create(WikipediaApiService::class.java)
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/data/api/WikipediaResponse.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaResponse.kt b/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaResponse.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaResponse.kt	
+++ /dev/null	
@@ -1,27 +0,0 @@
-package com.example.travelsouvenir.data.api
-
-import com.example.travelsouvenir.data.PlaceEntity
-import com.google.gson.annotations.SerializedName
-
-data class WikipediaPlaceResponse (
-    @SerializedName("title") val title: String,
-    @SerializedName("originalimage") val originalImage: OriginalImage?,
-    @SerializedName("description") val description: String,
-    @SerializedName("extract") val detailedDescription: String) {
-
-    fun toPlaceEntity(): PlaceEntity {
-        return PlaceEntity(
-            name = title,
-            description = description,
-            originalImage = originalImage?.source,
-            detailedDescription = detailedDescription
-        )
-    }
-}
-
-data class OriginalImage(
-    @SerializedName("source") val source: String
-)
-//companion metoda, iz place respoinsa u place entity
-
-//POZIVI SA ACCESS TOKEN, REFRESH TOKEN, ANIMACIJE UBACITI,
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/data/api/WikipediaApiService.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaApiService.kt b/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaApiService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/api/WikipediaApiService.kt	
+++ /dev/null	
@@ -1,9 +0,0 @@
-package com.example.travelsouvenir.data.api
-
-import retrofit2.http.GET
-import retrofit2.http.Path
-
-interface WikipediaApiService {
-    @GET("page/summary/{title}")
-    suspend fun getPlaceInfo(@Path("title") title: String): WikipediaPlaceResponse
-}
Index: app/src/main/java/com/example/travelsouvenir/data/PlaceDao.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/PlaceDao.kt b/app/src/main/java/com/example/travelsouvenir/data/PlaceDao.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/PlaceDao.kt	
+++ /dev/null	
@@ -1,21 +0,0 @@
-package com.example.travelsouvenir.data
-
-import androidx.room.Dao
-import androidx.room.Insert
-import androidx.room.Query
-
-@Dao
-interface PlaceDao {
-
-    @Query("SELECT * FROM places WHERE name = :placeName LIMIT 1")
-    suspend fun getPlaceByName(placeName: String): PlaceEntity?
-
-    @Query("SELECT detailed_description FROM places WHERE name = :placeName LIMIT 1")
-    suspend fun getDetailedDescription(placeName: String): String?
-
-    @Insert
-    suspend fun insertPlace(place: PlaceEntity)
-
-    @Query("SELECT * FROM places")
-    suspend fun getAllPlaces(): List<PlaceEntity>
-}
Index: app/src/main/java/com/example/travelsouvenir/data/AppDatabase.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/AppDatabase.kt b/app/src/main/java/com/example/travelsouvenir/data/AppDatabase.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/AppDatabase.kt	
+++ /dev/null	
@@ -1,10 +0,0 @@
-package com.example.travelsouvenir.data
-
-
-import androidx.room.Database
-import androidx.room.RoomDatabase
-
-@Database(entities = [PlaceEntity::class], version = 1, exportSchema = false)
-abstract class AppDatabase : RoomDatabase() {
-    abstract fun placeDao(): PlaceDao
-}
Index: app/src/main/java/com/example/travelsouvenir/data/PlaceEntity.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/PlaceEntity.kt b/app/src/main/java/com/example/travelsouvenir/data/PlaceEntity.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/PlaceEntity.kt	
+++ /dev/null	
@@ -1,26 +0,0 @@
-package com.example.travelsouvenir.data
-
-import androidx.room.ColumnInfo
-import androidx.room.Entity
-import androidx.room.PrimaryKey
-import com.example.travelsouvenir.data.api.WikipediaPlaceResponse
-
-@Entity(tableName = "places")
-data class PlaceEntity(
-    @PrimaryKey(autoGenerate = true) val id: Long = 0,
-    val name: String,
-    val description: String = "",
-    @ColumnInfo(name = "original_image") val originalImage: String? = null,
-    @ColumnInfo(name= "detailed_description") val detailedDescription: String = "",
-) {
-    companion object {
-        fun fromWikipediaResponse(response: WikipediaPlaceResponse): PlaceEntity {
-            return PlaceEntity(
-                name = response.title,
-                description = response.description,
-                originalImage = response.originalImage?.source,
-                detailedDescription = response.detailedDescription
-            )
-        }
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/data/PlaceRepository.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/PlaceRepository.kt b/app/src/main/java/com/example/travelsouvenir/data/PlaceRepository.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/PlaceRepository.kt	
+++ /dev/null	
@@ -1,10 +0,0 @@
-package com.example.travelsouvenir.data
-
-interface PlaceRepository {
-    suspend fun insertPlace(place: PlaceEntity)
-    suspend fun fetchPlaceInfo(title: String): PlaceEntity
-    suspend fun getAllPlaces(): List<PlaceEntity>
-    suspend fun getDetailedDescription(placeName: String): String?
-}
-
-//PREBACITI DA BUDU INTERFACE, PLACEREPOSITORY IMPLEMENTATION IMPL ,
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/data/PlaceRepositoryImpl.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/data/PlaceRepositoryImpl.kt b/app/src/main/java/com/example/travelsouvenir/data/PlaceRepositoryImpl.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/data/PlaceRepositoryImpl.kt	
+++ /dev/null	
@@ -1,32 +0,0 @@
-package com.example.travelsouvenir.data
-
-import com.example.travelsouvenir.data.api.WikipediaApiService
-import javax.inject.Inject
-
-class PlaceRepositoryImpl @Inject constructor(
-    private val placeDao: PlaceDao,
-    private val wikipediaApiService: WikipediaApiService
-) : PlaceRepository {
-
-    override suspend fun insertPlace(place: PlaceEntity) {
-        val existingPlace = placeDao.getPlaceByName(place.name)
-        if (existingPlace == null) {
-            placeDao.insertPlace(place)
-        }
-    }
-
-    override suspend fun fetchPlaceInfo(title: String): PlaceEntity {
-        val response = wikipediaApiService.getPlaceInfo(title)
-        return response.toPlaceEntity()
-       //return WikipediaMapper.mapToPlaceEntity(response)
-    }
-
-    override suspend fun getAllPlaces(): List<PlaceEntity> {
-        return placeDao.getAllPlaces()
-    }
-
-    override suspend fun getDetailedDescription(placeName: String): String? {
-        return placeDao.getDetailedDescription(placeName)
-    }
-}
-
Index: app/src/main/java/com/example/travelsouvenir/pages/Place.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/pages/Place.kt b/app/src/main/java/com/example/travelsouvenir/pages/Place.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/pages/Place.kt	
+++ /dev/null	
@@ -1,17 +0,0 @@
-package com.example.travelsouvenir.pages
-
-import kotlinx.serialization.Serializable
-
-@Serializable
-data class Place(
-    val id: Int,
-    val name: String,
-    val description: String,
-    val originalImage: String,
-    val detailedDescription: String
-)
-
-@Serializable
-data class Places(
-    val places: List<Place>
-)
Index: app/src/main/java/com/example/travelsouvenir/pages/PlaceList.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/pages/PlaceList.kt b/app/src/main/java/com/example/travelsouvenir/pages/PlaceList.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/pages/PlaceList.kt	
+++ /dev/null	
@@ -1,137 +0,0 @@
-package com.example.travelsouvenir.pages
-
-import androidx.compose.animation.AnimatedVisibility
-import androidx.compose.animation.core.animateFloatAsState
-import androidx.compose.animation.core.tween
-import androidx.compose.animation.fadeIn
-import androidx.compose.animation.fadeOut
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.Arrangement
-import androidx.compose.foundation.layout.Box
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.Row
-import androidx.compose.foundation.layout.fillMaxSize
-import androidx.compose.foundation.layout.fillMaxWidth
-import androidx.compose.foundation.layout.height
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.lazy.LazyColumn
-import androidx.compose.foundation.lazy.items
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material3.Text
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.runtime.setValue
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.scale
-import androidx.compose.ui.draw.shadow
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import coil.compose.AsyncImage
-import com.example.travelsouvenir.R
-
-
-@Composable
-fun DisplayPlace(place: Place, onClick: () -> Unit) {
-    var isSelected by remember { mutableStateOf(false) }
-
-    // Animate scale on click
-    val scale by animateFloatAsState(
-        targetValue = if (isSelected) 1.05f else 1f,
-        animationSpec = tween(durationMillis = 500)
-    )
-
-    Box(
-        modifier = Modifier
-            .fillMaxSize()
-            .clickable {
-                isSelected = !isSelected
-                onClick()
-            }
-            .scale(scale)
-    ) {
-        Column(
-            modifier = Modifier
-                .fillMaxSize()
-                .padding(10.dp),
-            verticalArrangement = Arrangement.Top,
-            horizontalAlignment = Alignment.CenterHorizontally
-        ) {
-            Box(
-                modifier = Modifier
-                    .padding(top = 6.dp)
-                    .shadow(8.dp, RoundedCornerShape(8.dp))
-                    .height(150.dp)
-                    .fillMaxWidth()
-            ) {
-                AsyncImage(
-                    model = place.originalImage,
-                    contentScale = ContentScale.Crop,
-                    contentDescription = null,
-                    modifier = Modifier
-                        .height(150.dp)
-                        .fillMaxWidth(),
-                    error = painterResource(R.drawable.paris),
-                    fallback = painterResource(R.drawable.paris)
-                )
-
-                Row(modifier = Modifier.fillMaxSize()) {
-                    Text(
-                        text = place.name,
-                        fontSize = 34.sp,
-                        fontWeight = FontWeight.ExtraBold,
-                        color = Color.White,
-                        modifier = Modifier
-                            .padding(top = 40.dp, start = 20.dp)
-                            .shadow(elevation = 8.dp, shape = RoundedCornerShape(4.dp)),
-                        textAlign = TextAlign.Center
-                    )
-                }
-
-                Text(
-                    text = place.description,
-                    fontSize = 13.sp,
-                    lineHeight = 12.sp,
-                    fontWeight = FontWeight.Bold,
-                    color = Color.LightGray,
-                    modifier = Modifier
-                        .align(Alignment.BottomStart)
-                        .padding(bottom = 20.dp, end = 14.dp, start = 20.dp)
-                        .shadow(elevation = 4.dp, shape = RoundedCornerShape(4.dp)),
-                    textAlign = TextAlign.Left
-                )
-            }
-        }
-    }
-}
-
-
-
-
-@Composable
-fun DisplayAllPlaces(places: List<Place>, onPlaceClick: (String) -> Unit) {
-    LazyColumn(
-        modifier = Modifier.fillMaxSize(),
-        verticalArrangement = Arrangement.spacedBy(16.dp)
-    ) {
-        items(places) { place ->
-            AnimatedVisibility(
-                visible = true,
-                enter = fadeIn(),
-                exit = fadeOut()
-            ) {
-                DisplayPlace(place) {
-                    onPlaceClick(place.name)
-                }
-            }
-        }
-    }
-}
-
Index: app/src/main/java/com/example/travelsouvenir/pages/PlaceTest.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/pages/PlaceTest.kt b/app/src/main/java/com/example/travelsouvenir/pages/PlaceTest.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/pages/PlaceTest.kt	
+++ /dev/null	
@@ -1,32 +0,0 @@
-import android.util.Log
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.LaunchedEffect
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.livedata.observeAsState
-import androidx.navigation.NavHostController
-import com.example.travelsouvenir.pages.DisplayAllPlaces
-import com.example.travelsouvenir.viewmodels.PlacesViewModel
-
-
-@Composable
-fun MyPlaceScreen(viewModel: PlacesViewModel, navController: NavHostController) {
-    LaunchedEffect(Unit) {
-        viewModel.loadPlacesFromDatabase()
-    }
-
-    val places by viewModel.places.observeAsState(emptyList())
-
-    Log.d("DISPLAY_PLACES", "Currently displayed places: ${places.map { it.name }}")
-
-    if (places.isEmpty()) {
-        Log.d("UI_UPDATE", "No places available to display.")
-        // Show a message or empty state here
-    } else {
-        Log.d("UI_UPDATE", "Displaying ${places.size} places.")
-        // Call DisplayAllPlaces and handle click navigation there
-        DisplayAllPlaces(places) { placeName ->
-            // Navigate only when a place is clicked
-            navController.navigate("GalleryScreen/$placeName")
-        }
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/pages/LandingPage.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/pages/LandingPage.kt b/app/src/main/java/com/example/travelsouvenir/pages/LandingPage.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/pages/LandingPage.kt	
+++ /dev/null	
@@ -1,76 +0,0 @@
-package com.example.travelsouvenir.pages
-
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.layout.*
-import androidx.compose.foundation.shape.RoundedCornerShape
-import androidx.compose.material3.Text
-import androidx.compose.runtime.Composable
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.draw.shadow
-import androidx.compose.ui.graphics.Brush
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.text.TextStyle
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.tooling.preview.Preview
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import com.example.travelsouvenir.R
-import com.example.travelsouvenir.ui.theme.TravelSouvenirTheme
-
-@Composable
-fun LandingPage(modifier: Modifier = Modifier) {
-    val gradientBrush = Brush.linearGradient(
-        colors = listOf(
-            Color(0xFFFFE259),
-            Color(0xFFFFA751)
-        )
-    )
-
-    val planet = painterResource(R.drawable.travel_photo)
-
-    Box(modifier = modifier.fillMaxSize()) {
-        Column(
-            modifier = modifier
-                .fillMaxSize()
-                .padding(30.dp),
-            verticalArrangement = Arrangement.Top,
-            horizontalAlignment = Alignment.CenterHorizontally
-        ) {
-
-            Text(
-                text = "Map Your Memories,\nUncover the Stories",
-                fontSize = 30.sp,
-                fontWeight = FontWeight.Bold,
-                modifier = Modifier.padding(top = 45.dp),
-                textAlign = TextAlign.Center,
-                style = TextStyle(brush = gradientBrush)
-            )
-            Image(
-                painter = planet,
-                contentDescription = null,
-                modifier = Modifier
-                    .padding(top = 30.dp)
-                    .shadow(8.dp, RoundedCornerShape(16.dp))
-            )
-            Text(
-                text = "Ready to save a memory?\n" +
-                        "Tap the camera to snap a picture!",
-                fontSize = 18.sp,
-                fontWeight = FontWeight.Medium,
-                modifier = Modifier.padding(top = 40.dp),
-                textAlign = TextAlign.Center
-            )
-        }
-    }
-}
-
-@Preview(showBackground = true)
-@Composable
-fun PreviewLandingPage() {
-    TravelSouvenirTheme {
-        LandingPage()
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/pages/TravelScreen.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/pages/TravelScreen.kt b/app/src/main/java/com/example/travelsouvenir/pages/TravelScreen.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/pages/TravelScreen.kt	
+++ /dev/null	
@@ -1,217 +0,0 @@
-package com.example.travelsouvenir.pages
-
-import MyPlaceScreen
-import android.Manifest
-import android.location.Location
-import android.net.Uri
-import android.util.Log
-import androidx.activity.compose.rememberLauncherForActivityResult
-import androidx.activity.result.contract.ActivityResultContracts
-import androidx.compose.animation.AnimatedVisibility
-import androidx.compose.animation.core.tween
-import androidx.compose.animation.fadeIn
-import androidx.compose.animation.fadeOut
-import androidx.compose.animation.slideInHorizontally
-import androidx.compose.animation.slideInVertically
-import androidx.compose.animation.slideOutHorizontally
-import androidx.compose.animation.slideOutVertically
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.layout.Arrangement
-import androidx.compose.foundation.layout.Box
-import androidx.compose.foundation.layout.Row
-import androidx.compose.foundation.layout.fillMaxHeight
-import androidx.compose.foundation.layout.fillMaxSize
-import androidx.compose.foundation.layout.fillMaxWidth
-import androidx.compose.foundation.layout.height
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.layout.size
-import androidx.compose.material3.CircularProgressIndicator
-import androidx.compose.material3.Scaffold
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.LaunchedEffect
-import androidx.compose.runtime.mutableStateOf
-import androidx.compose.runtime.remember
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.platform.LocalContext
-import androidx.compose.ui.res.painterResource
-import androidx.compose.ui.unit.dp
-import androidx.core.content.FileProvider
-import androidx.hilt.navigation.compose.hiltViewModel
-import androidx.navigation.NavDeepLink
-import androidx.navigation.NavHostController
-import androidx.navigation.NavType
-import androidx.navigation.compose.NavHost
-import androidx.navigation.compose.composable
-import androidx.navigation.compose.rememberNavController
-import androidx.navigation.navArgument
-import androidx.navigation.navDeepLink
-import com.example.travelsouvenir.viewmodels.PlacesViewModel
-import com.example.travelsouvenir.R
-import com.example.travelsouvenir.utils.LocationHelper
-import com.example.travelsouvenir.utils.PhotoHelper
-import com.example.travelsouvenir.viewmodels.GalleryViewModel
-import com.google.android.gms.location.LocationRequest
-import com.google.android.gms.location.LocationServices
-import com.google.android.gms.location.Priority
-import java.io.File
-
-enum class TravelScreen(val route: String) {
-    LandingPage("LandingPage"),
-    MyPlaceScreen("MyPlaceScreen"),
-    GalleryScreen("GalleryScreen/{placeName}")
-}
-
-@Composable
-fun MyScreenContent(viewModel: PlacesViewModel, deepLinkPlaceName: String? = null, ) {
-    val context = LocalContext.current
-    val locationHelper = remember { LocationHelper(context, viewModel) }
-    val logo = painterResource(R.drawable.paper_plane)
-    val home = painterResource(R.drawable.homeor)
-    val profile = painterResource(R.drawable.profile)
-    val book = painterResource(R.drawable.book)
-    val camera = painterResource(R.drawable.camera)
-
-    val navController: NavHostController = rememberNavController()
-    val fusedLocationClient = remember { LocationServices.getFusedLocationProviderClient(context) }
-    val locationState = remember { mutableStateOf<Location?>(null) }
-    val isLoading = remember { mutableStateOf(true) }
-    val imageUri = remember { mutableStateOf<Uri?>(null) }
-    // Log for debugging deep link navigation
-    LaunchedEffect(deepLinkPlaceName) {
-        Log.d("DeepLinkNavigation", "Attempting to navigate to GalleryScreen with placeName: $deepLinkPlaceName") // Debug log
-        deepLinkPlaceName?.let { name ->
-            navController.navigate(TravelScreen.GalleryScreen.route.replace("{placeName}", name))
-        }
-    }
-    LaunchedEffect(Unit) {
-        viewModel.loadPlacesFromDatabase()
-        isLoading.value = false
-    }
-
-    val locationRequest = remember {
-        LocationRequest.Builder(
-            Priority.PRIORITY_HIGH_ACCURACY, 10000L
-        ).apply { setMinUpdateIntervalMillis(5000L) }.build()
-    }
-
-    val permissionLauncher = rememberLauncherForActivityResult(
-        contract = ActivityResultContracts.RequestMultiplePermissions(),
-        onResult = { permissions ->
-            val cameraGranted = permissions[Manifest.permission.CAMERA] ?: false
-            val locationGranted = permissions[Manifest.permission.ACCESS_FINE_LOCATION] ?: false
-
-            if (cameraGranted && locationGranted) {
-                locationHelper.startLocationUpdates(fusedLocationClient, locationRequest, locationState)
-            } else {
-                Log.d("Permission", "Camera or location permission denied")
-            }
-        }
-    )
-    val cameraLauncher = rememberLauncherForActivityResult(ActivityResultContracts.TakePicture()) { success ->
-        if (success) {
-            Log.d("Camera", "Image saved to: ${imageUri.value}")
-            locationHelper.getCityNameFromLocation(fusedLocationClient, imageUri.value!!)
-        }
-    }
-
-    LaunchedEffect(Unit) {
-        permissionLauncher.launch(
-            arrayOf(
-                Manifest.permission.CAMERA,
-                Manifest.permission.ACCESS_FINE_LOCATION
-            )
-        )
-
-        val imageFile = File(context.filesDir, "temp_image.jpg")
-        imageUri.value = FileProvider.getUriForFile(context, "${context.packageName}.fileprovider", imageFile)
-    }
-
-    // Navigate to GalleryScreen if deepLinkPlaceName is provided
-    LaunchedEffect(deepLinkPlaceName) {
-        deepLinkPlaceName?.let { name ->
-            navController.navigate(TravelScreen.GalleryScreen.route.replace("{placeName}", name))
-        }
-    }
-
-    Scaffold(
-        topBar = { Box(Modifier.fillMaxWidth(), contentAlignment = Alignment.TopCenter) { Image(logo, null, Modifier.size(88.dp).padding(top = 30.dp)) } },
-        bottomBar = {
-            Box(
-                Modifier
-                    .fillMaxWidth()
-                    .height(106.dp)
-                    .background(Color(0xFFF5F5F5)),
-                contentAlignment = Alignment.BottomCenter
-            ) {
-                Row(
-                    Modifier.fillMaxWidth().fillMaxHeight(),
-                    horizontalArrangement = Arrangement.SpaceAround,
-                    verticalAlignment = Alignment.CenterVertically
-                ) {
-                    Image(home, "Home", Modifier.size(55.dp).clickable { navController.navigate(TravelScreen.LandingPage.route) })
-                    Image(camera, "Camera", Modifier.size(55.dp).clickable { cameraLauncher.launch(imageUri.value) })
-                    Image(book, "Book", Modifier.size(50.dp).clickable { navController.navigate(TravelScreen.MyPlaceScreen.route) })
-                    Image(profile, "Profile", Modifier.size(55.dp))
-                }
-            }
-        }
-    ) { paddingValues ->
-        NavHost(
-            navController = navController,
-            startDestination = TravelScreen.LandingPage.route,
-            Modifier.fillMaxSize().padding(paddingValues)
-        ) {
-            composable(
-                TravelScreen.LandingPage.route,
-                enterTransition = { fadeIn(animationSpec = tween(300)) },
-                exitTransition = { fadeOut(animationSpec = tween(300)) }
-            ) { LandingPage() }
-
-            composable(
-                TravelScreen.MyPlaceScreen.route,
-                enterTransition = { slideInHorizontally(initialOffsetX = { fullWidth -> fullWidth }) },
-                exitTransition = { slideOutHorizontally(targetOffsetX = { fullWidth -> -fullWidth }) }
-            ) {
-                Box(
-                    modifier = Modifier.fillMaxSize(),
-                    contentAlignment = Alignment.Center
-                ) {
-                    AnimatedVisibility(visible = isLoading.value) {
-                        CircularProgressIndicator(
-                            modifier = Modifier.size(64.dp),
-                            color = Color.Blue
-                        )
-                    }
-
-                    AnimatedVisibility(visible = !isLoading.value) {
-                        MyPlaceScreen(viewModel, navController)
-                    }
-                }
-            }
-
-            composable(
-                route = TravelScreen.GalleryScreen.route,
-                arguments = listOf(navArgument("placeName") { type = NavType.StringType }),
-                deepLinks = listOf(navDeepLink { uriPattern = "myapp://gallery/{placeName}" }),
-                enterTransition = { slideInVertically(initialOffsetY = { fullHeight -> fullHeight }) },
-                exitTransition = { slideOutVertically(targetOffsetY = { fullHeight -> -fullHeight }) }
-            ) { backStackEntry ->
-                val placeName = backStackEntry.arguments?.getString("placeName") ?: ""
-                val detailedDescription = viewModel.places.value?.find { it.name == placeName }?.detailedDescription ?: ""
-                val galleryViewModel: GalleryViewModel = hiltViewModel()
-
-                LaunchedEffect(placeName, detailedDescription) {
-                    galleryViewModel.loadGalleryData(emptyList(), detailedDescription, placeName)
-                }
-
-                GalleryScreen(galleryViewModel)
-            }
-        }
-    }
-
-    locationState.value?.let { Log.d("Location", "Lat: ${it.latitude}, Lng: ${it.longitude}") }
-}
Index: app/src/main/java/com/example/travelsouvenir/pages/GalleryScreen.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/pages/GalleryScreen.kt b/app/src/main/java/com/example/travelsouvenir/pages/GalleryScreen.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/pages/GalleryScreen.kt	
+++ /dev/null	
@@ -1,212 +0,0 @@
-package com.example.travelsouvenir.pages
-
-import android.net.Uri
-import androidx.compose.foundation.Image
-import androidx.compose.foundation.background
-import androidx.compose.foundation.clickable
-import androidx.compose.foundation.gestures.detectTransformGestures
-import androidx.compose.foundation.layout.Box
-import androidx.compose.foundation.layout.Column
-import androidx.compose.foundation.layout.PaddingValues
-import androidx.compose.foundation.layout.aspectRatio
-import androidx.compose.foundation.layout.fillMaxSize
-import androidx.compose.foundation.layout.fillMaxWidth
-import androidx.compose.foundation.layout.padding
-import androidx.compose.foundation.lazy.LazyColumn
-import androidx.compose.material.Card
-import androidx.compose.material.Icon
-import androidx.compose.material.IconButton
-import androidx.compose.material.Text
-import androidx.compose.material.icons.Icons
-import androidx.compose.material.icons.filled.Close
-import androidx.compose.runtime.Composable
-import androidx.compose.runtime.collectAsState
-import androidx.compose.runtime.getValue
-import androidx.compose.runtime.remember
-import androidx.compose.ui.Alignment
-import androidx.compose.ui.Modifier
-import androidx.compose.ui.geometry.Offset
-import androidx.compose.ui.graphics.Color
-import androidx.compose.ui.graphics.graphicsLayer
-import androidx.compose.ui.input.pointer.pointerInput
-import androidx.compose.ui.layout.ContentScale
-import androidx.compose.ui.text.font.FontWeight
-import androidx.compose.ui.text.style.TextAlign
-import androidx.compose.ui.unit.dp
-import androidx.compose.ui.unit.sp
-import androidx.compose.ui.util.lerp
-import androidx.hilt.navigation.compose.hiltViewModel
-import coil.annotation.ExperimentalCoilApi
-import coil.compose.rememberImagePainter
-import com.example.travelsouvenir.viewmodels.GalleryViewModel
-import com.google.accompanist.pager.HorizontalPager
-import com.google.accompanist.pager.rememberPagerState
-import com.google.accompanist.pager.calculateCurrentOffsetForPage
-import kotlin.math.absoluteValue
-
-@OptIn(ExperimentalCoilApi::class)
-@Composable
-fun GalleryScreen(  //DESCRIPTION I PLACENAME U VIEWMODEL, gallery helper treba u viewmodel, i sve sto se pojavljuje na screenu preko helpera ide u viewmodel, ili jetpack ili view
-    galleryViewModel: GalleryViewModel
-) {
-    val photos by galleryViewModel.photos.collectAsState()
-    val detailedDescription by galleryViewModel.detailedDescription.collectAsState()
-    val placeName by galleryViewModel.placeName.collectAsState()
-
-    LazyColumn {
-        item {
-            HorizontalPagerWithOffsetTransition(photos)
-        }
-        item {
-            DescriptionText(detailedDescription)
-        }
-    }
-}
-
-
-@OptIn(ExperimentalCoilApi::class)
-@Composable
-fun HorizontalPagerWithOffsetTransition(
-    photos: List<Uri>,
-    modifier: Modifier = Modifier
-) {
-    val pagerState = rememberPagerState()
-    val openDialog = remember { androidx.compose.runtime.mutableStateOf(false) }
-    val selectedPhotoIndex = remember { androidx.compose.runtime.mutableStateOf(0) }
-
-    HorizontalPager(
-        state = pagerState,
-        count = photos.size,
-        contentPadding = PaddingValues(horizontal = 32.dp),
-        modifier = modifier.fillMaxSize()
-    ) { page ->
-        Column {
-            Card(
-                Modifier
-                    .graphicsLayer {
-                        val pageOffset = calculateCurrentOffsetForPage(page).absoluteValue
-
-                        lerp(
-                            start = 0.85f,
-                            stop = 1f,
-                            fraction = 1f - pageOffset.coerceIn(0f, 1f)
-                        ).also { scale ->
-                            scaleX = scale
-                            scaleY = scale
-                        }
-                        alpha = lerp(
-                            start = 0.5f,
-                            stop = 1f,
-                            fraction = 1f - pageOffset.coerceIn(0f, 1f)
-                        )
-                    }
-                    .fillMaxWidth()
-                    .aspectRatio(1f)
-                    .clickable {
-                        selectedPhotoIndex.value = page
-                        openDialog.value = true
-                    }
-            ) {
-                Box {
-                    Image(
-                        painter = rememberImagePainter(photos[page]),
-                        contentScale = ContentScale.Crop,
-                        contentDescription = null,
-                        modifier = Modifier.fillMaxSize(),
-                    )
-                }
-            }
-        }
-    }
-
-    if (openDialog.value) {
-        FullScreenImageDialog(
-            photos = photos,
-            initialIndex = selectedPhotoIndex.value,
-            onDismiss = { openDialog.value = false }
-        )
-    }
-}
-
-@Composable
-fun FullScreenImageDialog(photos: List<Uri>, initialIndex: Int, onDismiss: () -> Unit) {
-    val pagerState = rememberPagerState(initialPage = initialIndex) // Fixing pagerState
-
-    androidx.compose.ui.window.Dialog(onDismissRequest = onDismiss) {
-        Box(
-            modifier = Modifier
-                .fillMaxSize()
-                .background(Color.Black)
-        ) {
-            HorizontalPager(
-                count = photos.size,
-                state = pagerState,
-                modifier = Modifier.fillMaxSize()
-            ) { page ->
-                Box(modifier = Modifier.fillMaxSize()) {
-                    val scaleState = remember { androidx.compose.runtime.mutableStateOf(1f) }
-                    val offsetState = remember { androidx.compose.runtime.mutableStateOf(Offset(0f, 0f)) }
-
-                    Modifier.pointerInput(Unit) {
-                        detectTransformGestures { _, pan, zoomChange, _ ->
-                            if (scaleState.value > 1f) {
-                                scaleState.value *= zoomChange
-                                scaleState.value = scaleState.value.coerceIn(1f, 3f)
-
-                                offsetState.value = Offset(
-                                    x = offsetState.value.x + pan.x,
-                                    y = offsetState.value.y + pan.y
-                                )
-                            }
-                        }
-                    }
-
-                    Image(
-                        painter = rememberImagePainter(photos[page]),
-                        contentScale = ContentScale.Fit,
-                        contentDescription = null,
-                        modifier = Modifier
-                            .fillMaxSize()
-                            .graphicsLayer(
-                                scaleX = scaleState.value,
-                                scaleY = scaleState.value,
-                                translationX = offsetState.value.x,
-                                translationY = offsetState.value.y
-                            )
-                    )
-
-                    Modifier.clickable {
-                        scaleState.value = 1f
-                        offsetState.value = Offset(0f, 0f)
-                    }
-                }
-            }
-
-            IconButton(
-                onClick = onDismiss,
-                modifier = Modifier
-                    .align(Alignment.TopEnd)
-                    .padding(16.dp)
-            ) {
-                Icon(
-                    imageVector = Icons.Default.Close,
-                    contentDescription = "Close",
-                    tint = Color.White
-                )
-            }
-        }
-    }
-}
-
-@Composable
-fun DescriptionText(detailedDescription: String) {
-    Text(
-        text = detailedDescription,
-        textAlign = TextAlign.Justify,
-        fontSize = 11.sp,
-        fontWeight = FontWeight.Normal,
-        modifier = Modifier
-            .fillMaxWidth()
-            .padding(top = 24.dp, start = 16.dp, end = 16.dp)
-    )
-}
Index: app/src/main/java/com/example/travelsouvenir/utils/PhotoHelper.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/utils/PhotoHelper.kt b/app/src/main/java/com/example/travelsouvenir/utils/PhotoHelper.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/utils/PhotoHelper.kt	
+++ /dev/null	
@@ -1,41 +0,0 @@
-package com.example.travelsouvenir.utils
-
-import android.content.Context
-import android.net.Uri
-import android.os.Environment
-import android.util.Log
-import java.io.File
-import java.io.FileOutputStream
-import java.io.InputStream
-
-class PhotoHelper(private val context: Context) {
-
-    fun createAlbumAndSavePhoto(cityName: String, imageUri: Uri) {
-        val albumName = cityName.replace(" ", "_")
-        val albumDir = File(context.getExternalFilesDir(Environment.DIRECTORY_PICTURES), albumName)
-
-        if (!albumDir.exists()) {
-            if (albumDir.mkdirs()) {
-                Log.d("Album", "Album directory created: $albumDir")
-            } else {
-                Log.d("Album", "Failed to create album directory: $albumDir")
-                return
-            }
-        }
-
-        val newFile = File(albumDir, "photo_${System.currentTimeMillis()}.jpg")
-        try {
-            val inputStream: InputStream? = context.contentResolver.openInputStream(imageUri)
-            val outputStream = FileOutputStream(newFile)
-
-            inputStream?.use { input ->
-                outputStream.use { output ->
-                    input.copyTo(output)
-                }
-            }
-            Log.d("Album", "Photo saved to: ${newFile.absolutePath}")
-        } catch (e: Exception) {
-            Log.e("Album", "Error saving photo: ${e.message}")
-        }
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/utils/GalleryHelper.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/utils/GalleryHelper.kt b/app/src/main/java/com/example/travelsouvenir/utils/GalleryHelper.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/utils/GalleryHelper.kt	
+++ /dev/null	
@@ -1,29 +0,0 @@
-package com.example.travelsouvenir.utils
-
-import android.content.Context
-import android.net.Uri
-import android.os.Environment
-import android.util.Log
-import java.io.File
-import javax.inject.Inject
-
-class GalleryHelper @Inject constructor(private val context: Context) {
-
-    fun fetchPhotosFromAlbum(cityName: String): List<Uri> {
-        val albumName = cityName.replace(" ", "_")
-        val albumDir = File(context.getExternalFilesDir(Environment.DIRECTORY_PICTURES), albumName)
-
-        val photoUris = mutableListOf<Uri>()
-
-        if (albumDir.exists() && albumDir.isDirectory) {
-            val photos = albumDir.listFiles { file -> file.extension.lowercase() == "jpg" }
-            photos?.forEach { file ->
-                photoUris.add(Uri.fromFile(file))
-            }
-        } else {
-            Log.d("Album", "Album directory does not exist: $albumDir")
-        }
-
-        return photoUris
-    }
-}
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/utils/LocationHelper.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/utils/LocationHelper.kt b/app/src/main/java/com/example/travelsouvenir/utils/LocationHelper.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/utils/LocationHelper.kt	
+++ /dev/null	
@@ -1,83 +0,0 @@
-package com.example.travelsouvenir.utils
-
-import android.content.Context
-import android.location.Geocoder
-import android.location.Location
-import android.net.Uri
-import android.util.Log
-import androidx.compose.runtime.MutableState
-import com.example.travelsouvenir.viewmodels.PlacesViewModel
-import com.google.android.gms.location.FusedLocationProviderClient
-import com.google.android.gms.location.LocationRequest
-import com.google.android.gms.location.LocationResult
-import com.google.android.gms.location.LocationCallback
-import java.util.Locale
-import android.Manifest
-import android.content.pm.PackageManager
-import androidx.core.app.ActivityCompat
-import android.os.Looper
-
-class LocationHelper(private val context: Context, private val viewModel: PlacesViewModel) {
-
-    fun startLocationUpdates(
-        fusedLocationClient: FusedLocationProviderClient,
-        locationRequest: LocationRequest,
-        locationState: MutableState<Location?>
-    ) {
-        if (ActivityCompat.checkSelfPermission(
-                context,
-                Manifest.permission.ACCESS_FINE_LOCATION
-            ) != PackageManager.PERMISSION_GRANTED
-        ) {
-            return
-        }
-
-        fusedLocationClient.requestLocationUpdates(
-            locationRequest,
-            object : LocationCallback() {
-                override fun onLocationResult(locationResult: LocationResult) {
-                    locationState.value = locationResult.lastLocation
-                    Log.d("Location", "Location updated: ${locationResult.lastLocation?.latitude}, ${locationResult.lastLocation?.longitude}")
-                }
-            },
-            Looper.getMainLooper()
-        )
-    }
-
-    fun getCityNameFromLocation(
-        locationClient: FusedLocationProviderClient,
-        imageUri: Uri
-    ) {
-        if (ActivityCompat.checkSelfPermission(
-                context,
-                Manifest.permission.ACCESS_FINE_LOCATION
-            ) != PackageManager.PERMISSION_GRANTED
-        ) {
-            Log.d("Location", "Location permission not granted.")
-            return
-        }
-
-        locationClient.lastLocation.addOnSuccessListener { location ->
-            if (location != null) {
-                val geocoder = Geocoder(context, Locale.getDefault())
-                val addressList: List<android.location.Address>?
-
-                try {
-                    addressList = geocoder.getFromLocation(location.latitude, location.longitude, 1)
-                    if (!addressList.isNullOrEmpty()) {
-                        val cityName = addressList[0].locality ?: "Unknown"
-                        Log.d("Location", "City Name: $cityName")
-                        viewModel.loadPlaces(listOf(cityName))
-                        PhotoHelper(context).createAlbumAndSavePhoto(cityName, imageUri)
-                    } else {
-                        Log.d("Location", "No address found")
-                    }
-                } catch (e: Exception) {
-                    Log.e("Location", "Error retrieving address", e)
-                }
-            } else {
-                Log.d("Location", "Location is null")
-            }
-        }
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/modules/AppModule.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/modules/AppModule.kt b/app/src/main/java/com/example/travelsouvenir/modules/AppModule.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/modules/AppModule.kt	
+++ /dev/null	
@@ -1,50 +0,0 @@
-package com.example.travelsouvenir.modules
-
-import android.app.Application
-import android.content.Context
-import androidx.room.Room
-import com.example.travelsouvenir.data.AppDatabase
-import com.example.travelsouvenir.data.PlaceDao
-import com.example.travelsouvenir.data.api.RetrofitInstance
-import com.example.travelsouvenir.data.api.WikipediaApiService
-import dagger.Module
-import dagger.Provides
-import dagger.hilt.InstallIn
-import dagger.hilt.android.qualifiers.ApplicationContext
-import dagger.hilt.components.SingletonComponent
-import javax.inject.Singleton
-
-@Module
-@InstallIn(SingletonComponent::class)
-object AppModule {
-
-    // Provide the Room database
-    @Singleton
-    @Provides
-    fun provideDatabase(@ApplicationContext context: Context): AppDatabase {
-        return Room.databaseBuilder(
-            context,
-            AppDatabase::class.java,
-            "app_database" // Change this name as necessary
-        )   .fallbackToDestructiveMigration()
-            .build()
-    }
-
-
-    @Provides
-    fun providePlaceDao(appDatabase: AppDatabase): PlaceDao {
-        return appDatabase.placeDao()
-    }
-
-
-    @Provides
-    @Singleton
-    fun provideWikipediaApiService(): WikipediaApiService {
-        return RetrofitInstance.api
-    }
-
-    @Provides
-    fun provideContext(application: Application): Context {
-        return application.applicationContext
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/modules/RepositoryModule.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/modules/RepositoryModule.kt b/app/src/main/java/com/example/travelsouvenir/modules/RepositoryModule.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/modules/RepositoryModule.kt	
+++ /dev/null	
@@ -1,19 +0,0 @@
-package com.example.travelsouvenir.modules
-
-
-import com.example.travelsouvenir.data.PlaceRepository
-import com.example.travelsouvenir.data.PlaceRepositoryImpl
-import dagger.Binds
-import dagger.Module
-import dagger.hilt.InstallIn
-import dagger.hilt.components.SingletonComponent
-
-@Module
-@InstallIn(SingletonComponent::class)
-abstract class RepositoryModule {
-
-    @Binds
-    abstract fun bindPlaceRepository(
-        placeRepositoryImpl: PlaceRepositoryImpl
-    ): PlaceRepository
-}
Index: app/src/main/java/com/example/travelsouvenir/viewmodels/PlacesViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/viewmodels/PlacesViewModel.kt b/app/src/main/java/com/example/travelsouvenir/viewmodels/PlacesViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/viewmodels/PlacesViewModel.kt	
+++ /dev/null	
@@ -1,65 +0,0 @@
-package com.example.travelsouvenir.viewmodels
-
-import android.util.Log
-import androidx.lifecycle.LiveData
-import androidx.lifecycle.MutableLiveData
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.example.travelsouvenir.data.PlaceRepository
-import com.example.travelsouvenir.pages.Place
-import dagger.hilt.android.lifecycle.HiltViewModel
-import kotlinx.coroutines.launch
-import javax.inject.Inject
-
-@HiltViewModel
-class PlacesViewModel @Inject constructor(
-    private val placeRepository: PlaceRepository
-) : ViewModel() {
-    private val _places = MutableLiveData<List<Place>>()
-    val places: LiveData<List<Place>> get() = _places
-
-
-
-    fun loadPlaces(titles: List<String>) {
-        viewModelScope.launch {
-            val currentPlaces = mutableListOf<Place>()
-            for (title in titles) {
-                try {
-                    // Fetching place info from repository
-                    val placeEntity = placeRepository.fetchPlaceInfo(title)
-                    placeRepository.insertPlace(placeEntity)
-
-                    val place = Place(
-                        id = placeEntity.id.toInt(),  // Use actual ID if available
-                        name = placeEntity.name,
-                        description = placeEntity.description,
-                        originalImage = placeEntity.originalImage ?: "",
-                        detailedDescription = placeEntity.detailedDescription
-                    )
-                    currentPlaces.add(place)
-
-                    Log.d("API_SUCCESS", "Successfully fetched data for $title")
-                } catch (e: Exception) {
-                    Log.e("API_ERROR", "Error fetching data for $title", e)
-                }
-            }
-            _places.value = currentPlaces
-        }
-    }
-
-    fun loadPlacesFromDatabase() {
-        viewModelScope.launch {
-            val placeEntities = placeRepository.getAllPlaces()
-            val places = placeEntities.map { entity ->
-                Place(
-                    id = entity.id.toInt(),
-                    name = entity.name,
-                    description = entity.description,
-                    originalImage = entity.originalImage ?: "",
-                    detailedDescription = entity.detailedDescription
-                )
-            }
-            _places.value = places
-        }
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/viewmodels/GalleryViewModel.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/viewmodels/GalleryViewModel.kt b/app/src/main/java/com/example/travelsouvenir/viewmodels/GalleryViewModel.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/viewmodels/GalleryViewModel.kt	
+++ /dev/null	
@@ -1,39 +0,0 @@
-package com.example.travelsouvenir.viewmodels
-
-import android.content.Context
-import android.net.Uri
-import androidx.lifecycle.ViewModel
-import androidx.lifecycle.viewModelScope
-import com.example.travelsouvenir.utils.GalleryHelper
-import dagger.hilt.android.lifecycle.HiltViewModel
-import kotlinx.coroutines.flow.MutableStateFlow
-import kotlinx.coroutines.flow.StateFlow
-import kotlinx.coroutines.launch
-import javax.inject.Inject
-
-@HiltViewModel
-class GalleryViewModel @Inject constructor(
-    private val galleryHelper: GalleryHelper
-) : ViewModel() {
-
-    private val _photos = MutableStateFlow<List<Uri>>(emptyList())
-    val photos: StateFlow<List<Uri>> get() = _photos
-
-    private val _detailedDescription = MutableStateFlow("")
-    val detailedDescription: StateFlow<String> get() = _detailedDescription
-
-    private val _placeName = MutableStateFlow("")
-    val placeName: StateFlow<String> get() = _placeName
-
-    // Function to load gallery data
-    fun loadGalleryData(photos: List<Uri>, detailedDescription: String, placeName: String) {
-        _detailedDescription.value = detailedDescription
-        _placeName.value = placeName
-
-        viewModelScope.launch {
-            // Fetch photos from the album based on the place name (city name)
-            val photoUris = galleryHelper.fetchPhotosFromAlbum(placeName)
-            _photos.value = photoUris
-        }
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/MainActivity.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/MainActivity.kt b/app/src/main/java/com/example/travelsouvenir/MainActivity.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/MainActivity.kt	
+++ /dev/null	
@@ -1,113 +0,0 @@
-package com.example.travelsouvenir
-
-import android.Manifest
-import android.content.Intent
-import android.content.pm.PackageManager
-import android.os.Build
-import android.os.Bundle
-import androidx.activity.ComponentActivity
-import androidx.activity.compose.setContent
-import androidx.activity.enableEdgeToEdge
-import androidx.activity.result.contract.ActivityResultContracts
-import androidx.activity.viewModels
-import androidx.core.content.ContextCompat
-import com.example.travelsouvenir.pages.MyScreenContent
-import com.example.travelsouvenir.ui.theme.TravelSouvenirTheme
-import com.example.travelsouvenir.viewmodels.PlacesViewModel
-import dagger.hilt.android.AndroidEntryPoint
-import android.util.Log
-import androidx.hilt.navigation.compose.hiltViewModel
-import androidx.navigation.NavHostController
-import com.example.travelsouvenir.pages.GalleryScreen
-import com.example.travelsouvenir.viewmodels.GalleryViewModel
-import com.google.firebase.messaging.FirebaseMessaging
-
-@AndroidEntryPoint
-class MainActivity : ComponentActivity() {
-
-    private val myViewModel: PlacesViewModel by viewModels()
-
-    override fun onCreate(savedInstanceState: Bundle?) {
-        super.onCreate(savedInstanceState)
-
-        askNotificationPermission()
-        FirebaseMessaging.getInstance().token.addOnCompleteListener { task ->
-            if (task.isSuccessful) {
-                val token = task.result
-                sendRegistrationToServer(token) // Use your method to send the token to your server
-                Log.d("MainActivity", "FCM token: $token")
-            } else {
-                Log.w("MainActivity", "Fetching FCM registration token failed", task.exception)
-            }
-        }
-
-        enableEdgeToEdge()
-        setContent {
-            TravelSouvenirTheme {
-                MyScreenContent(viewModel = myViewModel, deepLinkPlaceName = null) // Pass null initially
-            }
-        }
-        handleDeepLink(intent)
-    }
-
-    private fun askNotificationPermission() {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {
-            if (ContextCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) ==
-                PackageManager.PERMISSION_GRANTED
-            ) {
-
-            } else if (shouldShowRequestPermissionRationale(Manifest.permission.POST_NOTIFICATIONS)) {
-                // Show rationale to the user explaining why the permission is needed
-            } else {
-                requestPermissionLauncher.launch(Manifest.permission.POST_NOTIFICATIONS)
-            }
-        }
-    }
-
-    private val requestPermissionLauncher = registerForActivityResult(
-        ActivityResultContracts.RequestPermission()
-    ) { isGranted: Boolean ->
-        if (!isGranted) {
-            Log.d("MainActivity", "Notification permission denied")
-        }
-    }
-
-    private fun sendRegistrationToServer(token: String?) {
-        Log.d("MainActivity", "Token sent to server: $token")
-    }
-
-    // Handle incoming intents for deep linking
-    private fun handleDeepLink(intent: Intent?) {
-        intent?.let {
-            val placeName = it.getStringExtra("placeName")
-            val destination = it.getStringExtra("destination")
-            Log.d("DeepLink", "Destination: $destination, PlaceName: $placeName") // Add this log
-            if (placeName != null && destination != null) {
-                // Handle navigation based on the destination and placeName
-                if (destination == "GalleryScreen") {
-                    navigateToDestination(destination, placeName)
-                }
-            }
-        }
-    }
-
-    private fun navigateToDestination(destination: String, placeName: String) {
-        setContent {
-            TravelSouvenirTheme {
-
-                // Load gallery data with a placeholder or fetched data if available
-
-                // Navigate to the GalleryScreen
-                Log.d("Navigation", "Navigating to $destination with placeName: $placeName") // Debug log
-                MyScreenContent(viewModel = myViewModel, deepLinkPlaceName = placeName)
-
-            }
-        }
-    }
-
-    // Override onNewIntent to handle new intents if app is already running
-    override fun onNewIntent(intent: Intent?) {
-        super.onNewIntent(intent)
-        handleDeepLink(intent) // Re-handle the intent
-    }
-}
Index: app/src/main/java/com/example/travelsouvenir/MyApplication.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/MyApplication.kt b/app/src/main/java/com/example/travelsouvenir/MyApplication.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/MyApplication.kt	
+++ /dev/null	
@@ -1,7 +0,0 @@
-package com.example.travelsouvenir
-
-import android.app.Application
-import dagger.hilt.android.HiltAndroidApp
-
-@HiltAndroidApp
-class MyApplication : Application()
\ No newline at end of file
Index: app/src/main/java/com/example/travelsouvenir/MyFirebaseMessagingService.kt
===================================================================
diff --git a/app/src/main/java/com/example/travelsouvenir/MyFirebaseMessagingService.kt b/app/src/main/java/com/example/travelsouvenir/MyFirebaseMessagingService.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/travelsouvenir/MyFirebaseMessagingService.kt	
+++ /dev/null	
@@ -1,103 +0,0 @@
-package com.example.travelsouvenir
-
-import android.app.PendingIntent
-import android.content.Intent
-import android.content.pm.PackageManager
-import android.util.Log
-import androidx.core.app.NotificationCompat
-import androidx.core.app.NotificationManagerCompat
-import androidx.core.content.ContextCompat
-import com.google.firebase.messaging.FirebaseMessagingService
-import com.google.firebase.messaging.RemoteMessage
-import android.Manifest
-import android.app.NotificationChannel
-import android.app.NotificationManager
-import android.os.Build
-
-private const val CHANNEL_ID = "travel_souvenir_notifications"
-
-class MyFirebaseMessagingService : FirebaseMessagingService() {
-
-    override fun onCreate() {
-        super.onCreate()
-        createNotificationChannel() // Ensure the notification channel is created
-    }
-
-    override fun onMessageReceived(remoteMessage: RemoteMessage) {
-        super.onMessageReceived(remoteMessage)
-
-        // Handle the received message
-        Log.d("FCM", "Message received from: ${remoteMessage.from}")
-
-        if (remoteMessage.data.isNotEmpty()) {
-            Log.d("FCM", "Message data payload: ${remoteMessage.data}")
-            showNotification(remoteMessage.data) // Show the notification with data
-        }
-
-        remoteMessage.notification?.let {
-            Log.d("FCM", "Message Notification Body: ${it.body}")
-        }
-    }
-
-    override fun onNewToken(token: String) {
-        super.onNewToken(token)
-        Log.d("MyFirebaseService", "Refreshed token: $token")
-        sendRegistrationToServer(token)
-    }
-
-    private fun sendRegistrationToServer(token: String?) {
-        Log.d("MyFirebaseService", "Token sent to server: $token")
-    }
-
-    private fun createNotificationChannel() {
-        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
-            val name = "Gallery Notifications"
-            val descriptionText = "Gallery"
-            val importance = NotificationManager.IMPORTANCE_DEFAULT
-            val channel = NotificationChannel(CHANNEL_ID, name, importance).apply {
-                description = descriptionText
-            }
-            val notificationManager: NotificationManager = getSystemService(NotificationManager::class.java)
-            notificationManager.createNotificationChannel(channel)
-        }
-    }
-
-    private fun showNotification(data: Map<String, String>) {
-        val placeName = data["placeName"] ?: "Unknown Place" // Use a default if null
-        val notificationId = 1 // Unique ID for the notification
-
-        // Create an Intent for the deep link
-        val deepLinkIntent = Intent(this, MainActivity::class.java).apply {
-            flags = Intent.FLAG_ACTIVITY_NEW_TASK or Intent.FLAG_ACTIVITY_CLEAR_TASK
-            putExtra("destination", "GalleryScreen") // Destination for deep link
-            putExtra("placeName", placeName)
-        }
-
-        // Create a PendingIntent for the notification
-        val pendingIntent = PendingIntent.getActivity(
-            this,
-            notificationId,
-            deepLinkIntent,
-            PendingIntent.FLAG_UPDATE_CURRENT or PendingIntent.FLAG_IMMUTABLE
-        )
-
-        // Check notification permission before showing notification
-        if (ContextCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) == PackageManager.PERMISSION_GRANTED) {
-            // Create the notification
-            val notification = NotificationCompat.Builder(this, CHANNEL_ID)
-                .setContentTitle("New Place")
-                .setContentText("Click to view the gallery for $placeName")
-                .setSmallIcon(R.drawable.travel_photo)
-                .setContentIntent(pendingIntent)
-                .setAutoCancel(true)
-                .build()
-
-            // Show the notification
-            with(NotificationManagerCompat.from(this)) {
-                notify(notificationId, notification)
-            }
-        } else {
-            Log.w("MyFirebaseService", "Notification permission not granted")
-        }
-    }
-}
Index: app/src/main/AndroidManifest.xml
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
deleted file mode 100644
--- a/app/src/main/AndroidManifest.xml	
+++ /dev/null	
@@ -1,61 +0,0 @@
-<manifest xmlns:android="http://schemas.android.com/apk/res/android"
-    xmlns:tools="http://schemas.android.com/tools">
-
-    <uses-permission android:name="android.permission.CAMERA" />
-    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
-    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
-    <uses-feature android:name="android.hardware.camera" android:required="false" />
-    <uses-permission android:name="android.permission.INTERNET" />
-    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
-    <uses-permission android:name="android.permission.POST_NOTIFICATIONS" />
-
-    <application
-        android:name=".MyApplication"
-        android:allowBackup="true"
-        android:dataExtractionRules="@xml/data_extraction_rules"
-        android:fullBackupContent="@xml/backup_rules"
-        android:icon="@mipmap/ic_launcher"
-        android:label="@string/app_name"
-        android:roundIcon="@mipmap/ic_launcher_round"
-        android:supportsRtl="true"
-        android:theme="@style/Theme.TravelSouvenir"
-        tools:targetApi="31">
-
-        <activity
-            android:name=".MainActivity"
-            android:exported="true"
-            android:label="@string/app_name"
-            android:theme="@style/Theme.TravelSouvenir">
-            <intent-filter>
-                <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
-            </intent-filter>
-            <intent-filter>
-                <action android:name="android.intent.action.VIEW" />
-                <category android:name="android.intent.category.DEFAULT" />
-                <category android:name="android.intent.category.BROWSABLE" />
-                <data android:scheme="myapp" android:host="gallery" />
-            </intent-filter>
-        </activity>
-
-        <provider
-            android:name="androidx.core.content.FileProvider"
-            android:authorities="${applicationId}.fileprovider"
-            android:exported="false"
-            android:grantUriPermissions="true">
-            <meta-data
-                android:name="android.support.FILE_PROVIDER_PATHS"
-                android:resource="@xml/file_paths" />
-        </provider>
-
-        <service
-            android:name=".MyFirebaseMessagingService"
-            android:exported="false">
-            <intent-filter>
-                <action android:name="com.google.firebase.MESSAGING_EVENT" />
-            </intent-filter>
-        </service>
-
-    </application>
-
-</manifest>
Index: app/src/test/java/com/example/travelsouvenir/ExampleUnitTest.kt
===================================================================
diff --git a/app/src/test/java/com/example/travelsouvenir/ExampleUnitTest.kt b/app/src/test/java/com/example/travelsouvenir/ExampleUnitTest.kt
deleted file mode 100644
--- a/app/src/test/java/com/example/travelsouvenir/ExampleUnitTest.kt	
+++ /dev/null	
@@ -1,17 +0,0 @@
-package com.example.travelsouvenir
-
-import org.junit.Test
-
-import org.junit.Assert.*
-
-/**
- * Example local unit test, which will execute on the development machine (host).
- *
- * See [testing documentation](http://d.android.com/tools/testing).
- */
-class ExampleUnitTest {
-    @Test
-    fun addition_isCorrect() {
-        assertEquals(4, 2 + 2)
-    }
-}
\ No newline at end of file
Index: app/src/test/java/com/example/travelsouvenir/PlaceRepositoryTest.kt
===================================================================
diff --git a/app/src/test/java/com/example/travelsouvenir/PlaceRepositoryTest.kt b/app/src/test/java/com/example/travelsouvenir/PlaceRepositoryTest.kt
deleted file mode 100644
--- a/app/src/test/java/com/example/travelsouvenir/PlaceRepositoryTest.kt	
+++ /dev/null	
@@ -1,52 +0,0 @@
-package com.example.travelsouvenir
-
-import com.example.travelsouvenir.data.PlaceDao
-import com.example.travelsouvenir.data.PlaceEntity
-import com.example.travelsouvenir.data.PlaceRepositoryImpl
-import com.example.travelsouvenir.data.api.OriginalImage
-import com.example.travelsouvenir.data.api.WikipediaApiService
-import com.example.travelsouvenir.data.api.WikipediaPlaceResponse
-import kotlinx.coroutines.runBlocking
-import org.junit.Assert.*
-import org.junit.Test
-import org.mockito.Mockito.*
-
-class PlaceRepositoryImplTest {
-
-    private val mockPlaceDao = mock(PlaceDao::class.java)
-    private val mockApiService = mock(WikipediaApiService::class.java)
-    private val repository = PlaceRepositoryImpl(mockPlaceDao, mockApiService)
-
-    @Test
-    fun testInsertPlace() = runBlocking {
-        val place = PlaceEntity(name = "Test Place", description = "Description", detailedDescription = "Detailed", originalImage = "image_url")
-
-        `when`(mockPlaceDao.getPlaceByName(place.name)).thenReturn(null)
-
-        repository.insertPlace(place)
-
-        verify(mockPlaceDao).insertPlace(place)
-    }
-
-    @Test
-    fun testFetchPlaceInfo() = runBlocking {
-        val title = "Test Title"
-        val response = WikipediaPlaceResponse("Title", OriginalImage("image_url"), "Description", "Detailed")
-
-        `when`(mockApiService.getPlaceInfo(title)).thenReturn(response)
-
-        val result = repository.fetchPlaceInfo(title)
-
-        assertEquals(response.toPlaceEntity(), result)
-    }
-
-    @Test
-    fun testGetAllPlaces() = runBlocking {
-        val places = listOf(PlaceEntity(name = "Place1"), PlaceEntity(name = "Place2"))
-        `when`(mockPlaceDao.getAllPlaces()).thenReturn(places)
-
-        val result = repository.getAllPlaces()
-
-        assertEquals(places, result)
-    }
-}
Index: app/src/test/java/com/example/travelsouvenir/PlacesViewModelTest.kt
===================================================================
diff --git a/app/src/test/java/com/example/travelsouvenir/PlacesViewModelTest.kt b/app/src/test/java/com/example/travelsouvenir/PlacesViewModelTest.kt
deleted file mode 100644
--- a/app/src/test/java/com/example/travelsouvenir/PlacesViewModelTest.kt	
+++ /dev/null	
@@ -1,96 +0,0 @@
-package com.example.travelsouvenir
-
-import androidx.lifecycle.Observer
-import com.example.travelsouvenir.data.PlaceRepository
-import com.example.travelsouvenir.pages.Place
-import kotlinx.coroutines.runBlocking
-import org.junit.Test
-import org.mockito.Mockito.*
-import androidx.arch.core.executor.testing.InstantTaskExecutorRule
-import com.example.travelsouvenir.data.PlaceEntity
-import com.example.travelsouvenir.viewmodels.PlacesViewModel
-import kotlinx.coroutines.Dispatchers
-import kotlinx.coroutines.test.UnconfinedTestDispatcher
-import kotlinx.coroutines.test.resetMain
-import kotlinx.coroutines.test.setMain
-import org.junit.After
-import org.junit.Before
-import org.junit.Rule
-import org.junit.runner.RunWith
-import org.robolectric.RobolectricTestRunner
-
-@RunWith(RobolectricTestRunner::class)
-class PlacesViewModelTest {
-    private val testDispatcher = UnconfinedTestDispatcher()
-
-    @Before
-    fun setUp() {
-        Dispatchers.setMain(testDispatcher)
-    }
-
-    @After
-    fun tearDown() {
-        Dispatchers.resetMain() // Clean up the test dispatcher
-    }
-
-    @get:Rule
-    val instantExecutorRule = InstantTaskExecutorRule()
-
-    private val mockRepository = mock(PlaceRepository::class.java)
-    private val viewModel = PlacesViewModel(mockRepository)
-
-    @Test
-    fun testLoadPlaces() = runBlocking {
-        val titles = listOf("Place1", "Place2")
-        val expectedPlaces = listOf(
-            Place(1, "Place1", "Description1", "imageUrl1", "detailedDescription1"),
-            Place(2, "Place2", "Description2", "imageUrl2",  "detailedDescription2")
-        )
-
-        val observer = mock(Observer::class.java) as Observer<List<Place>>
-
-        viewModel.places.observeForever(observer)
-
-        // Mock the PlaceEntity that the repository will return (after using the mapper)
-        val placeEntity1 = PlaceEntity(1L, "Place1", "Description1", "imageUrl1", "detailedDescription1")
-        val placeEntity2 = PlaceEntity(2L, "Place2", "Description2", "imageUrl2", "detailedDescription2")
-
-        // Use mock repository to return these entities when fetchPlaceInfo is called
-        `when`(mockRepository.fetchPlaceInfo("Place1")).thenReturn(placeEntity1)
-        `when`(mockRepository.fetchPlaceInfo("Place2")).thenReturn(placeEntity2)
-
-        // Call loadPlaces with the titles
-        viewModel.loadPlaces(titles)
-
-        // Verify that the observer received the correctly mapped Place objects
-        verify(observer).onChanged(expectedPlaces)
-    }
-
-    @Test
-    fun testLoadPlacesFromDatabase() = runBlocking {
-        // Mock PlaceEntity data returned by the repository
-        val placeEntities = listOf(
-            PlaceEntity(1L, "Place1", "Description1", "imageUrl1", "detailedDescription1"),
-            PlaceEntity(2L, "Place2", "Description2", "imageUrl2", "detailedDescription2")
-        )
-        val expectedPlaces = listOf(
-            Place(1, "Place1", "Description1", "imageUrl1", "detailedDescription1"),
-            Place(2, "Place2", "Description2", "imageUrl2", "detailedDescription2")
-        )
-
-        // Create a mock observer with the correct type
-        val observer = mock(Observer::class.java) as Observer<List<Place>>
-
-        // Attach the observer
-        viewModel.places.observeForever(observer)
-
-        // Mock the repository to return the placeEntities
-        `when`(mockRepository.getAllPlaces()).thenReturn(placeEntities)
-
-        // Call the ViewModel function to load from database
-        viewModel.loadPlacesFromDatabase()
-
-        // Verify the observer receives the mapped expected places
-        verify(observer).onChanged(expectedPlaces)
-    }
-}
Index: app/src/androidTest/java/com/example/travelsouvenir/ExampleInstrumentedTest.kt
===================================================================
diff --git a/app/src/androidTest/java/com/example/travelsouvenir/ExampleInstrumentedTest.kt b/app/src/androidTest/java/com/example/travelsouvenir/ExampleInstrumentedTest.kt
deleted file mode 100644
--- a/app/src/androidTest/java/com/example/travelsouvenir/ExampleInstrumentedTest.kt	
+++ /dev/null	
@@ -1,24 +0,0 @@
-package com.example.travelsouvenir
-
-import androidx.test.platform.app.InstrumentationRegistry
-import androidx.test.ext.junit.runners.AndroidJUnit4
-
-import org.junit.Test
-import org.junit.runner.RunWith
-
-import org.junit.Assert.*
-
-/**
- * Instrumented test, which will execute on an Android device.
- *
- * See [testing documentation](http://d.android.com/tools/testing).
- */
-@RunWith(AndroidJUnit4::class)
-class ExampleInstrumentedTest {
-    @Test
-    fun useAppContext() {
-        // Context of the app under test.
-        val appContext = InstrumentationRegistry.getInstrumentation().targetContext
-        assertEquals("com.example.travelsouvenir", appContext.packageName)
-    }
-}
\ No newline at end of file
Index: app/release/output-metadata.json
===================================================================
diff --git a/app/release/output-metadata.json b/app/release/output-metadata.json
deleted file mode 100644
--- a/app/release/output-metadata.json	
+++ /dev/null	
@@ -1,37 +0,0 @@
-{
-  "version": 3,
-  "artifactType": {
-    "type": "APK",
-    "kind": "Directory"
-  },
-  "applicationId": "com.example.travelsouvenir",
-  "variantName": "release",
-  "elements": [
-    {
-      "type": "SINGLE",
-      "filters": [],
-      "attributes": [],
-      "versionCode": 1,
-      "versionName": "1.0",
-      "outputFile": "app-release.apk"
-    }
-  ],
-  "elementType": "File",
-  "baselineProfiles": [
-    {
-      "minApi": 28,
-      "maxApi": 30,
-      "baselineProfiles": [
-        "baselineProfiles/1/app-release.dm"
-      ]
-    },
-    {
-      "minApi": 31,
-      "maxApi": 2147483647,
-      "baselineProfiles": [
-        "baselineProfiles/0/app-release.dm"
-      ]
-    }
-  ],
-  "minSdkVersionForDexing": 24
-}
\ No newline at end of file
Index: app/proguard-rules.pro
===================================================================
diff --git a/app/proguard-rules.pro b/app/proguard-rules.pro
deleted file mode 100644
--- a/app/proguard-rules.pro	
+++ /dev/null	
@@ -1,21 +0,0 @@
-# Add project specific ProGuard rules here.
-# You can control the set of applied configuration files using the
-# proguardFiles setting in build.gradle.
-#
-# For more details, see
-#   http://developer.android.com/guide/developing/tools/proguard.html
-
-# If your project uses WebView with JS, uncomment the following
-# and specify the fully qualified class name to the JavaScript interface
-# class:
-#-keepclassmembers class fqcn.of.javascript.interface.for.webview {
-#   public *;
-#}
-
-# Uncomment this to preserve the line number information for
-# debugging stack traces.
-#-keepattributes SourceFile,LineNumberTable
-
-# If you keep the line number information, uncomment this to
-# hide the original source file name.
-#-renamesourcefileattribute SourceFile
\ No newline at end of file
Index: app/.gitignore
===================================================================
diff --git a/app/.gitignore b/app/.gitignore
deleted file mode 100644
--- a/app/.gitignore	
+++ /dev/null	
@@ -1,1 +0,0 @@
-/build
\ No newline at end of file
Index: app/build.gradle.kts
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
deleted file mode 100644
--- a/app/build.gradle.kts	
+++ /dev/null	
@@ -1,117 +0,0 @@
-plugins {
-    alias(libs.plugins.android.application)
-    alias(libs.plugins.jetbrains.kotlin.android)
-    id ("kotlin-kapt")
-    id ("com.google.dagger.hilt.android")
-    id("com.google.gms.google-services")
-}
-
-android {
-
-    namespace = "com.example.travelsouvenir"
-    compileSdk = 34
-
-    defaultConfig {
-        applicationId = "com.example.travelsouvenir"
-        minSdk = 24
-        targetSdk = 34
-        versionCode = 1
-        versionName = "1.0"
-
-        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
-        vectorDrawables {
-            useSupportLibrary = true
-        }
-    }
-
-    buildTypes {
-        release {
-            isMinifyEnabled = false
-            proguardFiles(
-                getDefaultProguardFile("proguard-android-optimize.txt"),
-                "proguard-rules.pro"
-            )
-        }
-    }
-    compileOptions {
-        sourceCompatibility = JavaVersion.VERSION_1_8
-        targetCompatibility = JavaVersion.VERSION_1_8
-    }
-    kotlinOptions {
-        jvmTarget = "1.8"
-    }
-    buildFeatures {
-        compose = true
-    }
-    composeOptions {
-        kotlinCompilerExtensionVersion = "1.5.1"
-    }
-    packaging {
-        resources {
-            excludes += "/META-INF/{AL2.0,LGPL2.1}"
-        }
-    }
-}
-
-dependencies {
-    implementation(libs.androidx.core.ktx)
-    implementation(libs.androidx.lifecycle.runtime.ktx)
-    implementation(libs.androidx.activity.compose)
-    implementation ("com.google.code.gson:gson:2.10.1")
-    implementation("org.jetbrains.kotlinx:kotlinx-serialization-core:1.6.2")
-    implementation ("io.coil-kt:coil-compose:2.2.1")
-    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2")
-    implementation ("com.squareup.retrofit2:retrofit:2.9.0")
-    implementation ("com.squareup.retrofit2:converter-gson:2.9.0")
-    implementation ("com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2")
-    implementation(platform(libs.androidx.compose.bom))
-    implementation(libs.androidx.ui)
-    implementation(libs.androidx.ui.graphics)
-    implementation(libs.androidx.ui.tooling.preview)
-    implementation(libs.androidx.material3)
-    implementation(libs.androidx.navigation.compose)
-    implementation(libs.androidx.runtime.livedata)
-    implementation(libs.play.services.location)
-    implementation(libs.androidx.room.common)
-    implementation(libs.androidx.room.ktx)
-    implementation(libs.androidx.junit.ktx)
-    testImplementation(libs.junit)
-    androidTestImplementation(libs.androidx.junit)
-    androidTestImplementation(libs.androidx.espresso.core)
-    androidTestImplementation(platform(libs.androidx.compose.bom))
-    androidTestImplementation(libs.androidx.ui.test.junit4)
-    debugImplementation(libs.androidx.ui.tooling)
-    debugImplementation(libs.androidx.ui.test.manifest)
-    //HILT
-    implementation ("com.google.dagger:hilt-android:2.51.1")
-    kapt ("com.google.dagger:hilt-compiler:2.51.1")
-    implementation ("androidx.hilt:hilt-navigation-compose:1.0.0")
-    //ROOM
-    val room_version = "2.6.1"
-
-    implementation ("androidx.room:room-runtime:$room_version")
-    kapt("androidx.room:room-compiler:$room_version")
-    implementation("androidx.room:room-runtime:$room_version")
-    annotationProcessor("androidx.room:room-compiler:$room_version")
-    //pager
-    implementation ("com.google.accompanist:accompanist-pager:0.36.0")
-    implementation ("com.google.accompanist:accompanist-pager-indicators:0.36.0")
-    //TESTING
-    testImplementation ("org.mockito:mockito-core:5.0.0")
-    testImplementation ("org.mockito.kotlin:mockito-kotlin:5.0.0")
-    androidTestImplementation ("org.mockito:mockito-android:5.0.0")
-    androidTestImplementation ("androidx.test.ext:junit:1.1.5")
-    androidTestImplementation ("androidx.test.espresso:espresso-core:3.5.1")
-    testImplementation ("org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.1")
-    testImplementation ("org.robolectric:robolectric:4.10")
-
-    testImplementation ("io.mockk:mockk:1.13.4")
-    testImplementation ("androidx.arch.core:core-testing:2.1.0")
-    //FIREBASE
-    implementation(platform("com.google.firebase:firebase-bom:33.5.0"))
-    implementation("com.google.firebase:firebase-messaging")
-}
-
-kapt {
-    correctErrorTypes=true
-}
Index: app/google-services.json
===================================================================
diff --git a/app/google-services.json b/app/google-services.json
deleted file mode 100644
--- a/app/google-services.json	
+++ /dev/null	
@@ -1,29 +0,0 @@
-{
-  "project_info": {
-    "project_number": "371354724109",
-    "project_id": "travel-souvenir",
-    "storage_bucket": "travel-souvenir.appspot.com"
-  },
-  "client": [
-    {
-      "client_info": {
-        "mobilesdk_app_id": "1:371354724109:android:a4e12a05cb8ef5a220b244",
-        "android_client_info": {
-          "package_name": "com.example.travelsouvenir"
-        }
-      },
-      "oauth_client": [],
-      "api_key": [
-        {
-          "current_key": "AIzaSyBKn3SaSF0nc96uxKquAeItTHuKjSfJjG8"
-        }
-      ],
-      "services": {
-        "appinvite_service": {
-          "other_platform_oauth_client": []
-        }
-      }
-    }
-  ],
-  "configuration_version": "1"
-}
\ No newline at end of file
diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp b/app/src/main/res/mipmap-xxxhdpi/ic_launcher.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher.webp b/app/src/main/res/mipmap-hdpi/ic_launcher.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-hdpi/ic_launcher_round.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher.webp b/app/src/main/res/mipmap-xhdpi/ic_launcher.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-xhdpi/ic_launcher_round.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/font/inknutantiqua_bold.ttf b/app/src/main/res/font/inknutantiqua_bold.ttf
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/font/inknutantiqua_black.ttf b/app/src/main/res/font/inknutantiqua_black.ttf
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/font/inknutantiqua_light.ttf b/app/src/main/res/font/inknutantiqua_light.ttf
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/font/inknutantiqua_medium.ttf b/app/src/main/res/font/inknutantiqua_medium.ttf
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/font/inknutantiqua_regular.ttf b/app/src/main/res/font/inknutantiqua_regular.ttf
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/font/inknutantiqua_semibold.ttf b/app/src/main/res/font/inknutantiqua_semibold.ttf
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/font/inknutantiqua_extrabold.ttf b/app/src/main/res/font/inknutantiqua_extrabold.ttf
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher.webp b/app/src/main/res/mipmap-mdpi/ic_launcher.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-mdpi/ic_launcher_round.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/book.png b/app/src/main/res/drawable-nodpi/book.png
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/paris.jpg b/app/src/main/res/drawable-nodpi/paris.jpg
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/camera.png b/app/src/main/res/drawable-nodpi/camera.png
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/homeor.png b/app/src/main/res/drawable-nodpi/homeor.png
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/london.jpg b/app/src/main/res/drawable-nodpi/london.jpg
deleted file mode 100644
index 29c8a1162469385f419c5a7eca5ecb7eee478180..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/profile.png b/app/src/main/res/drawable-nodpi/profile.png
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/new_york.jpg b/app/src/main/res/drawable-nodpi/new_york.jpg
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/paper_plane.png b/app/src/main/res/drawable-nodpi/paper_plane.png
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/drawable-nodpi/travel_photo.png b/app/src/main/res/drawable-nodpi/travel_photo.png
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp b/app/src/main/res/mipmap-xxhdpi/ic_launcher.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp b/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.webp
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/release/app-release.apk b/app/release/app-release.apk
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/release/baselineProfiles/1/app-release.dm b/app/release/baselineProfiles/1/app-release.dm
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

diff --git a/app/release/baselineProfiles/0/app-release.dm b/app/release/baselineProfiles/0/app-release.dm
deleted file mode 100644
index e69de29bb2d1d6434b8b29ae775ad8c2e48c5391..0000000000000000000000000000000000000000
GIT binary patch
literal 0
Hc$@<O00001

